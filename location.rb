# Class: Location
#
# Creates new location objects/records for locations table in warehouse_mgr 
# database
# 
# Attributes:
# @id     - Integer: the primary key identifier for location city.
# @city   - String: the city name. 
#
# Public Methods:
# .all
#
# Private Methods:
# #insert

class Location
  
  attr_reader :id
  attr_accessor :city
  
  # Private (triggered by .new): .initialize
  # Gathers arguments (field values) in an options Hash; automatically inserts 
  # them into the locations table via private method .insert.
  #
  # Parameters:
  # options - {city: String}
  #
  # Returns: 
  # ???
  # 
  # State ChangeS:
  # ???
  
  def initialize(options)
    @city = options["city"]
  end

  # Public: .all
  # Get all the records in the locations table.
  #
  # Parameters:
  # None
  #
  # Returns: 
  # Array: Records from the locations table displaying all fields.
  #
  # State Changes:
  # None
  
  def self.all
    DATABASE.execute("SELECT * FROM locations")
  end
  
  #private
  
  # Private: #insert
  # Syntax to enter the Ruby object's arguments as a records' field values via 
  # sqlite3.
  #
  # Parameters:
  # None
  #
  # Returns: 
  # Integer - @id, "id" field value, generated by table upon creation and 
  # pulled from the record.
  # 
  # State ChangeS:
  # ???
  
  def insert
    DATABASE.execute("INSERT INTO locations (city) VALUES ('#{@city}')")
    @id = DATABASE.last_insert_row_id
  end
  
end